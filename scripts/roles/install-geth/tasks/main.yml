# Installs the latest stable Geth wallet and sets it to run on boot

- name: download and unpack geth tar
  unarchive:
    remote_src: yes
    src: "{{geth_tar_url}}"
    dest: "/tmp/"
  become: true
  retries: 3
  delay: 3

- name: Copy bin to final location
  copy:
    remote_src: yes
    src: "/tmp/{{geth_tar_name}}/geth"
    dest: "/usr/bin/geth"
    mode: "0755"
  become: true

- name: Template geth service file
  template:
    src: geth.service.j2
    dest: /etc/systemd/system/geth.service
  become: true

- name: Set geth to run on startup
  systemd:
    daemon_reload: yes
    name: geth
    state: restarted
    enabled: yes
  become: true

- name: Wait for Quick crashes
  pause:
    seconds: 30

- name: Check if geth is running
  command: systemctl status geth
  ignore_errors: yes
  changed_when: false
  register: service_geth_status

- name: Report status of geth
  fail:
    msg: |
      Service geth is not running.
      Output of `systemctl status geth`:
      {{ service_geth_status.stdout }}
      {{ service_geth_status.stderr }}
  when: service_geth_status is failed

- name: Open ports
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{item[0]}}"
    jump: ACCEPT
    ip_version: "{{item[1]}}"
    ctstate: NEW
  become: true
  with_nested:
    - "{{geth_ports}}"
    - ["ipv4", "ipv6"]

- name: save iptables rules
  shell: "service {{item}} save"
  become: true
  with_items:
    - iptables
    - ip6tables
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'Fedora'

- name: save iptables rules
  shell: "{{item}}"
  become: true
  with_items:
    - "iptables-save > /etc/iptables/rules.v4"
    - "ip6tables-save > /etc/iptables/rules.v6"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: allow nonstandard rpc port on selinux machines
  command: "semanage port -a -t http_port_t  -p tcp {{geth_rpc_port}}"
  ignore_errors: yes
